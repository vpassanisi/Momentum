{"version":3,"sources":["webpack:///./src/views/CreatePost.vue?486f","webpack:///./src/views/CreatePost.vue","webpack:///./src/views/CreatePost.vue?e18e","webpack:///./src/views/CreatePost.vue?221e"],"names":["class","ref","type","placeholder","title","handlePost","name","components","About","data","body","linkUrl","linkMenuIsActive","editor","computed","sub","this","$store","direct","state","DataMod","subs","isAuthenticated","AuthMod","isAuthLoading","methods","dispatch","createPost","subID","_id","imageHandler","range","getSelection","value","prompt","insertEmbed","index","mounted","createPostInit","$route","params","$refs","newPostEditor","modules","toolbar","container","header","list","script","size","color","handlers","image","bounds","newPostContainer","theme","readOnly","on","root","innerHTML","watch","$router","push","render"],"mappings":"2IAAA,W,4DCCWA,MAAM,6B,GAEXA,MAAM,gF,GAEDA,MAAM,iB,GAEPC,IAAI,mBACJD,MAAM,8D,GAQDC,IAAI,iB,GACJD,MAAM,kC,8EAhBnB,eA8BU,UA9BV,EA8BU,CA7BR,eA4BM,MA5BN,EA4BM,CAzBJ,eAqBM,MArBN,EAqBM,CApBJ,eAmBM,MAnBN,EAmBM,C,eAfJ,eAKE,SAJAA,MAAM,mJACNE,KAAK,OACLC,YAAY,c,qDACH,EAAAC,MAAK,K,mBAAL,EAAAA,SAEX,eAA2B,MAA3B,EAA2B,UAC3B,eAOM,MAPN,EAOM,CANJ,eAKS,UAJPJ,MAAM,qEACL,QAAK,8BAAE,EAAAK,YAAA,EAAAA,WAAA,sBACT,a,OAMP,eAEM,YADJ,eAAS,S,qECrBF,G,UAAA,eAAgB,CAC7BC,KAAM,aACNC,WAAY,CACVC,QAAA,MAEFC,KAL6B,WAM3B,MAAO,CACLL,MAAO,GACPM,KAAM,GACNC,QAAS,KACTC,kBAAkB,EAClBC,OAAQ,KAGZC,SAAU,CACRC,IADQ,WAEN,OAAOC,KAAKC,OAAOC,OAAOC,MAAMC,QAAQC,KAAK,IAE/CC,gBAJQ,WAKN,OAAON,KAAKC,OAAOC,OAAOC,MAAMI,QAAQD,iBAE1CE,cAPQ,WAQN,OAAOR,KAAKC,OAAOC,OAAOC,MAAMI,QAAQC,gBAG5CC,QAAS,CACDpB,WADC,WACS,2JACV,EAAKU,IADK,iEAER,EAAKE,OAAOC,OAAOQ,SAASN,QAAQO,WAAW,CACnDvB,MAAO,EAAKA,MACZM,KAAM,EAAKA,KACXkB,MAAO,EAAKb,IAAIc,MALJ,8CAQhBC,aATO,WAUL,IAAMC,EAAQf,KAAKH,OAAOmB,eACpBC,EAAQC,OAAO,yCACjBD,GAASF,GACXf,KAAKH,OAAOsB,YAAYJ,EAAMK,MAAO,QAASH,EAAO,UAI3DI,QA1C6B,WA0CtB,WACLrB,KAAKC,OAAOC,OAAOQ,SAASN,QAAQkB,eAClCtB,KAAKuB,OAAOC,OAAOzB,KAGrBC,KAAKH,OAAS,IAAI,IAAMG,KAAKyB,MAAMC,cAAyB,CAC1DC,QAAS,CACPC,QAAS,CACPC,UAAW,CACT,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,aAAc,cACf,CAAC,CAAEC,OAAQ,GAAK,CAAEA,OAAQ,IAC1B,CAAC,CAAEC,KAAM,WAAa,CAAEA,KAAM,WAC9B,CAAC,CAAEC,OAAQ,OAAS,CAAEA,OAAQ,UAC9B,CAAC,CAAEC,KAAM,CAAC,SAAS,EAAO,QAAS,UACnC,CAAC,CAAEC,MAAO,CAAC,UAAW,UAAW,aACjC,CAAC,OAAQ,UAEXC,SAAU,CACRC,MAAOpC,KAAKc,gBAIlBuB,OAAQrC,KAAKyB,MAAMa,iBACnBC,MAAO,OACPC,UAAU,EACVrD,YAAa,UAGfa,KAAKH,OAAO4C,GAAG,eAAe,WACxB,EAAK5C,SACP,EAAKH,KAAO,EAAKG,OAAO6C,KAAKC,eAInCC,MAAO,CACLtC,gBAAiB,WACVN,KAAKM,iBAAoBN,KAAKQ,eACjCR,KAAK6C,QAAQC,KAAb,aAAwB9C,KAAKuB,OAAOC,OAAOzB,W,UClFnD,EAAOgD,OAASA,EAED","file":"js/chunk-53e12fb4.d7e3ab8b.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./CreatePost.vue?vue&type=style&index=0&id=6341c988&lang=css\"","<template>\n  <section class=\"flex justify-center mt-32\">\n    <div\n      class=\"grid gap-6 grid-cols-1 md:grid-cols-3 justify-center w-11/12 max-w-screen-lg\"\n    >\n      <div class=\"md:col-span-2\">\n        <div\n          ref=\"newPostContainer\"\n          class=\"relative bg-white dark:bg-dark-gray-800 rounded shadow p-4\"\n        >\n          <input\n            class=\"border bg-transparent border-gray-400 dark:border-gray-700 w-full rounded focus:outline-none focus:border-gray-700 placeholder-gray-600 p-4 mb-4\"\n            type=\"text\"\n            placeholder=\"Title . . .\"\n            v-model=\"title\"\n          />\n          <div ref=\"newPostEditor\" />\n          <div class=\"flex flex-row justify-end mt-4\">\n            <button\n              class=\"rounded bg-primary dark:bg-primary-dark hover:bg-primary py-2 px-4\"\n              @click=\"handlePost\"\n            >\n              POST\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        <About />\n      </div>\n    </div>\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from \"vue\";\nimport About from \"../components/About.vue\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.core.css\";\nimport type {Sub} from \"../store/modules/types\"\n\nexport default defineComponent({\n  name: \"CreatePost\",\n  components: {\n    About,\n  },\n  data() {\n    return {\n      title: \"\",\n      body: \"\",\n      linkUrl: null as string | null,\n      linkMenuIsActive: false,\n      editor: {} as Quill,\n    };\n  },\n  computed: {\n    sub(): Sub | undefined {\n      return this.$store.direct.state.DataMod.subs[0]\n    },\n    isAuthenticated(): boolean {\n      return this.$store.direct.state.AuthMod.isAuthenticated;\n    },\n    isAuthLoading(): boolean {\n      return this.$store.direct.state.AuthMod.isAuthLoading;\n    },\n  },\n  methods: {\n    async handlePost() {\n      if(!this.sub) return\n      await this.$store.direct.dispatch.DataMod.createPost({\n        title: this.title,\n        body: this.body,\n        subID: this.sub._id,\n      });\n    },\n    imageHandler() {\n      const range = this.editor.getSelection();\n      const value = prompt(\"please copy paste the image url here.\");\n      if (value && range) {\n        this.editor.insertEmbed(range.index, \"image\", value, \"user\");\n      }\n    },\n  },\n  mounted() {\n    this.$store.direct.dispatch.DataMod.createPostInit(\n      this.$route.params.sub as string\n    );\n\n    this.editor = new Quill(this.$refs.newPostEditor as string, {\n      modules: {\n        toolbar: {\n          container: [\n            [\"bold\", \"italic\", \"underline\", \"strike\"],\n            [\"blockquote\", \"code-block\"],\n            [{ header: 1 }, { header: 2 }],\n            [{ list: \"ordered\" }, { list: \"bullet\" }],\n            [{ script: \"sub\" }, { script: \"super\" }],\n            [{ size: [\"small\", false, \"large\", \"huge\"] }],\n            [{ color: [\"#ff0000\", \"#00ff00\", \"#0000ff\"] }],\n            [\"link\", \"image\"],\n          ],\n          handlers: {\n            image: this.imageHandler,\n          },\n        },\n      },\n      bounds: this.$refs.newPostContainer as string,\n      theme: \"snow\",\n      readOnly: false,\n      placeholder: \". . .\",\n    });\n\n    this.editor.on(\"text-change\", () => {\n      if (this.editor) {\n        this.body = this.editor.root.innerHTML;\n      }\n    });\n  },\n  watch: {\n    isAuthenticated: function() {\n      if (!this.isAuthenticated && !this.isAuthLoading) {\n        this.$router.push(`/s/${this.$route.params.sub}`);\n      }\n    },\n  },\n});\n</script>\n\n<style>\n.dark .ql-picker-options {\n  color: black;\n}\n</style>\n","\nimport { defineComponent } from \"vue\";\nimport About from \"../components/About.vue\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.core.css\";\nimport type {Sub} from \"../store/modules/types\"\n\nexport default defineComponent({\n  name: \"CreatePost\",\n  components: {\n    About,\n  },\n  data() {\n    return {\n      title: \"\",\n      body: \"\",\n      linkUrl: null as string | null,\n      linkMenuIsActive: false,\n      editor: {} as Quill,\n    };\n  },\n  computed: {\n    sub(): Sub | undefined {\n      return this.$store.direct.state.DataMod.subs[0]\n    },\n    isAuthenticated(): boolean {\n      return this.$store.direct.state.AuthMod.isAuthenticated;\n    },\n    isAuthLoading(): boolean {\n      return this.$store.direct.state.AuthMod.isAuthLoading;\n    },\n  },\n  methods: {\n    async handlePost() {\n      if(!this.sub) return\n      await this.$store.direct.dispatch.DataMod.createPost({\n        title: this.title,\n        body: this.body,\n        subID: this.sub._id,\n      });\n    },\n    imageHandler() {\n      const range = this.editor.getSelection();\n      const value = prompt(\"please copy paste the image url here.\");\n      if (value && range) {\n        this.editor.insertEmbed(range.index, \"image\", value, \"user\");\n      }\n    },\n  },\n  mounted() {\n    this.$store.direct.dispatch.DataMod.createPostInit(\n      this.$route.params.sub as string\n    );\n\n    this.editor = new Quill(this.$refs.newPostEditor as string, {\n      modules: {\n        toolbar: {\n          container: [\n            [\"bold\", \"italic\", \"underline\", \"strike\"],\n            [\"blockquote\", \"code-block\"],\n            [{ header: 1 }, { header: 2 }],\n            [{ list: \"ordered\" }, { list: \"bullet\" }],\n            [{ script: \"sub\" }, { script: \"super\" }],\n            [{ size: [\"small\", false, \"large\", \"huge\"] }],\n            [{ color: [\"#ff0000\", \"#00ff00\", \"#0000ff\"] }],\n            [\"link\", \"image\"],\n          ],\n          handlers: {\n            image: this.imageHandler,\n          },\n        },\n      },\n      bounds: this.$refs.newPostContainer as string,\n      theme: \"snow\",\n      readOnly: false,\n      placeholder: \". . .\",\n    });\n\n    this.editor.on(\"text-change\", () => {\n      if (this.editor) {\n        this.body = this.editor.root.innerHTML;\n      }\n    });\n  },\n  watch: {\n    isAuthenticated: function() {\n      if (!this.isAuthenticated && !this.isAuthLoading) {\n        this.$router.push(`/s/${this.$route.params.sub}`);\n      }\n    },\n  },\n});\n","import { render } from \"./CreatePost.vue?vue&type=template&id=6341c988\"\nimport script from \"./CreatePost.vue?vue&type=script&lang=ts\"\nexport * from \"./CreatePost.vue?vue&type=script&lang=ts\"\n\nimport \"./CreatePost.vue?vue&type=style&index=0&id=6341c988&lang=css\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}